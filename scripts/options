#!/bin/bash
# Error codes
# 90: unknown option
# 91: invalid argument
# 92: option duplicate

RED="\033[0;31m"
NC="\033[0m" # No Color

function raiseError() {
  exitCode="$1"
  errorMessage="$2"
  echo -e "${RED}ERROR: $errorMessage${NC}"
  exit $exitCode
}

function checkArgument() {
  option="$1"
  argument="$2"
  errorMessage="$3"
  if [ "$argument" == "" ] ; then
    raiseError 91 "$option: missing argument"
  elif [[ "$argument" =~ ^-.* ]] ; then
    raiseError 91 "$errorMessage"
  fi
}

function checkOptionDuplicate() {
  option=$1
  optionValue=$2
  if [ "$optionValue" != "" ] && [ $optionValue -eq 1 ] ; then 
    raiseError 92 "$option: duplication option"
  fi
}

while [ true ] ; do
  option="$2"
  argument="$3"
  case "$option" in
    "--skip"|"-s")
      checkOptionDuplicate "$option" $SKIP_OPT
      SKIP_OPT=1
      ;;
    "--title"|"-t")
      TITLE_OPT=1
      checkArgument "$option" "$argument" "$option: invalid argument"
      TITLE="$argument"
      shift 1
      ;;
    "--github-clone"|"-gc")
      GITHUB_CLONE_OPT=1
      checkArgument "$option" "$argument" "invalid github clone url"
      GITHUB_CLONE_URL="$argument"
      shift 1
      ;;
    "")
      break
      ;;
    *)
      raiseError 90 "unknown option: $1"
      ;;
  esac
  shift 1
done

if [ "$SKIP_OPT" != "" ] && [ $SKIP_OPT -eq 1 ] ; then 
  echo skip
fi
if [ "$TITLE_OPT" != "" ] && [ $TITLE_OPT -eq 1 ] ; then 
  echo title: $TITLE
fi
if [ "$GITHUB_CLONE_OPT" != "" ] && [ $GITHUB_CLONE_OPT -eq 1 ] ; then 
  echo github clone url: $GITHUB_CLONE_URL
fi
